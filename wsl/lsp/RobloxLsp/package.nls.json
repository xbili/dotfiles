{
    "config.color.mode": "Color mode.",
    "config.color.mode.Grammar": "Grammar color.",
    "config.color.mode.Semantic": "Semantic color (Testing. Your color theme must support semantic coloring to be effective.).",
    "config.misc.color3Picker": "Enable Color Picker and Preview for Color3 functions.",
    "config.misc.goToScriptLink": "If enabled, shows a link to the source script when requiring a module.",
    "config.completion.callSnippet": "Shows function call snippets or parentheses.",
    "config.completion.callSnippet.Both": "Shows `function name` and `call snippet`.",
    "config.completion.callSnippet.Disable": "Only shows `function name`.",
    "config.completion.callSnippet.Replace": "Only shows `call snippet.`",
    "config.completion.callSnippet.Parentheses": "Autocompletes parentheses.",
    "config.completion.displayContext": "Previewing the relevant code snippet of the suggestion may help you understand the usage of the suggestion. The number set indicates the number of intercepted lines in the code fragment. If it is set to `0`, this feature can be disabled.",
    "config.completion.enable": "Enable completion.",
    "config.completion.endAutocompletion": "Enable on type `end` autocompletion like in Roblox Studio.\n\n(`editor.formatOnType` must be enabled to work.)",
    "config.completion.serverPort": "The port used to connect to the Roblox Studio Plugin. Set to 0 to disable.",
    "config.completion.fastAutocompletion": "Disable it if autocompletion doesn't work properly.",
    "config.completion.keywordSnippet": "Shows keyword syntax snippets.",
    "config.completion.keywordSnippet.Both": "Shows `keyword` and `syntax snippet`.",
    "config.completion.keywordSnippet.Disable": "Only shows `keyword`.",
    "config.completion.keywordSnippet.Replace": "Only shows `syntax snippet`.",
    "config.develop.debuggerPort": "Listen port of debugger.",
    "config.develop.debuggerWait": "Suspend before debugger connects.",
    "config.develop.enable": "Developer mode. Do not enable, performance will be affected.",
    "config.diagnostics.disable": "Disabled diagnostic (Use code in hover brackets).\n```json\n\"Lua.diagnostics.disable\" : [\n    \"unused-local\",\n    \"lowercase-global\"\n]\n```\n",
    "config.diagnostics.enable": "Enable diagnostics.",
    "config.diagnostics.syntax": "Enable syntax errors. Disable it if you want to use Selene.",
    "config.diagnostics.datamodelAsIgnore": "Use datamodel.json as ignore list.",
    "config.diagnostics.globals": "Defined global variables.\n```json\n\"Lua.diagnostics.globals\" : [\n    \"GLOBAL1\",\n    \"GLOBAL2\"\n]\n```\n",
    "config.diagnostics.ignore": "Ignored instance members.\n```json\n\"Lua.diagnostics.ignore\" : [\n    \"NAME1\",\n    \"NAME2\"\n]\n```\n",
    "config.diagnostics.severity": "Modified diagnostic severity.\n```json\n\"Lua.diagnostics.severity\" : {\n    \"redefined-local\" : \"Warning\",\n    \"emmy-lua\" : \"Hint\"\n}\n```\n",
    "config.hover.enable": "Enable hover.",
    "config.hover.viewNumber": "Hover to view numeric content (only if literal is not decimal).",
    "config.hover.viewString": "Hover to view the contents of a string (only if the literal contains an escape character).",
    "config.hover.viewStringMax": "The maximum length of a hover to view the contents of a string.",
    "config.runtime.path": "`package.path`",
    "config.runtime.version": "Lua runtime version.",
    "config.signatureHelp.enable": "Enable signature help.",
    "config.workspace.ignoreDir": "Ignored directories (Use `.gitignore` grammar).\n```json\n\"Lua.workspace.ignoreDir\" : [\n    \"temp/*.*\",\n    \"!temp/*.lua\"\n]\n```\n",
    "config.workspace.ignoreSubmodules": "Ignore submodules.",
    "config.workspace.rojoProjectFile": "The name of the .project.json file without the extension.",
    "config.workspace.loadMode": "What files should be preloaded.",
    "config.workspace.loadMode.allFiles": "Load all files in workspace.",
    "config.workspace.loadMode.rojoProject": "Load all files found in Rojo Project.",
    "config.workspace.library": "Load external library.\nThis feature can load external Lua files, which can be used for definition, automatic completion and other functions. Note that the language server does not monitor changes in external files and needs to restart if the external files are modified.\nThe following example shows loaded files in `C:/lua` and `../lib` ,exclude `../lib/temp`.\n```json\n\"Lua.workspace.library\": {\n    \"C:/lua\": true,\n    \"../lib\": [\n        \"temp/*\"\n    ]\n}\n```\n",
    "config.workspace.maxPreload": "Max preloaded files.",
    "config.workspace.preloadFileSize": "Skip files larger than this value (KB) when preloading.",
    "config.workspace.useGitIgnore": "Ignore files list in `.gitignore` .",
    "config.zzzzzz.cat": "DONT TOUCH ME, LET ME SLEEP >_<"
}